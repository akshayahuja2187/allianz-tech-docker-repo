pipeline {
  agent any
  stages {
    stage('Initialize test cluster') {
      steps {
        script{ sh '''
                      k3d cluster create my-cluster --wait   
                      print "Waiting for kubernetes cluster to be initialized and running"
                      kubectl wait pod --all --for=condition=Ready --namespace=kube-system
                      kubectl get pods --namespace kube-system
                   '''   
              }
      }
    }

    stage('Testing App Prior to Final Deployment') {
      steps {
        sh '''
              print "Running validation test before release"
              kubectl create namespace test-app
              kubectl apply -f deployment.yaml --namespace test-app
              kubectl apply -f nodeport.yaml --namespace test-app
              kubectl wait pod --all --for=condition=Ready --namespace=test-app
              kube_ip = kubectl get nodes k3d-my-cluster-server-0 -o jsonpath='{.status.addresses[0].address}
              pytest app/app_test/test.py --ip=${kube_ip}
              kubectl delete namespace test-app
           '''
      }
    }

    stage("Final Deployment") {
      steps{
        sh '''
              kubectl create namespace release-app || true
              kubectl apply -f deployment.yaml --namespace release-app
              kubectl wait pod --all --for=condition=Ready --namespace=release-app
              print "App has been Deployed to Release"
           '''
      }
    }
  }
  triggers {
  upstream(upstreamProjects: "my-build-job/main", threshold: hudson.model.Result.SUCCESS)
  }

  post { 
    failure {
       sh 'k3d cluster delete my-cluster'
        }
      }
}